version: '3.8'

services:
  ollama:
    build:
      context: .
      dockerfile: ollama.Dockerfile
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333" # REST API
      - "6334:6334" # gRPC (optional)
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - HOST=0.0.0.0
    dns:
      - 8.8.8.8
      - 1.1.1.1
    depends_on:
      - ollama
    restart: unless-stopped

  llamaindex:
    build:
      context: ./llamaindex
      dockerfile: Dockerfile
    container_name: llamaindex
    working_dir: /app
    volumes:
      - ./llamaindex:/app
    ports:
      - "8081:8081"
    environment:
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_API=http://ollama:11434
    depends_on:
      - qdrant
      - ollama
    restart: unless-stopped

  langchain:
    build:
      context: ./langchain-agent
      dockerfile: Dockerfile
    container_name: langchain
    ports:
      - "8082:8082"
    depends_on:
      - llamaindex
      - ollama
    restart: unless-stopped

  crewai-agents:
    build:
      context: ./crewai-agents
      dockerfile: Dockerfile
    container_name: crewai-agents
    ports:
      - "8083:8083"
    environment:
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_API=http://ollama:11434
      # Add your database connection settings here if needed
      # - DATABASE_URL=postgresql://user:password@host:port/dbname
    volumes:
      - ./crewai-agents:/app
    depends_on:
      - qdrant
      - ollama
      - llamaindex
    restart: unless-stopped


volumes:
  ollama:
  qdrant_data:
  shared_app: